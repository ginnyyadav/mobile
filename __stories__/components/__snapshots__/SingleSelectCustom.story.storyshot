// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots SingleSelectCustom default 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  paddingTop={0}
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "alignSelf": "center",
        "borderWidth": 1,
        "margin": 5,
        "padding": 5,
      }
    }
  >
    <View>
      <Text
        style={
          Object {
            "color": "#7e98c3",
            "fontSize": 16,
            "marginBottom": 2,
            "marginTop": 15,
          }
        }
      >
        Field Title
      </Text>
      <View
        style={
          Array [
            Object {
              "alignSelf": "stretch",
            },
            undefined,
          ]
        }
      >
        <View
          accessible={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          pointerEvents="box-only"
          testID="ios_touchable_wrapper"
        >
          <TextInput
            editable={false}
            style={
              Array [
                Object {
                  "borderColor": "#ededed",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "color": "#838383",
                  "fontSize": 18,
                  "height": 58,
                  "paddingLeft": 16,
                  "paddingRight": 30,
                },
                Object {
                  "color": "#838383",
                  "paddingLeft": 18,
                },
              ]
            }
            value="Select..."
          />
          <View
            style={
              Array [
                Object {
                  "position": "absolute",
                  "right": 0,
                },
                Object {
                  "paddingRight": 15,
                  "paddingTop": 20,
                },
              ]
            }
            testID="icon_container"
          >
            <Text />
          </View>
        </View>
        <Modal
          hardwareAccelerated={false}
          onDismiss={[Function]}
          onOrientationChange={[Function]}
          supportedOrientations={
            Array [
              "portrait",
              "landscape",
            ]
          }
          testID="ios_modal"
          transparent={true}
          visible={false}
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "flex": 1,
                "opacity": 1,
              }
            }
            testID="ios_modal_top"
          />
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#EFF1F2",
                  "borderTopColor": "#919498",
                  "borderTopWidth": 0.5,
                  "flexDirection": "row",
                  "height": 44,
                  "justifyContent": "space-between",
                  "paddingHorizontal": 10,
                  "zIndex": 2,
                },
                undefined,
              ]
            }
            testID="input_accessory_view"
          >
            <View
              style={
                Array [
                  Object {
                    "flexDirection": "row",
                  },
                  undefined,
                ]
              }
            >
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderColor": "#D0D4DB",
                        "borderRightWidth": 1.5,
                        "borderTopWidth": 1.5,
                        "height": 15,
                        "width": 15,
                      },
                      undefined,
                      Object {
                        "marginLeft": 11,
                        "transform": Array [
                          Object {
                            "translateY": 4,
                          },
                          Object {
                            "rotate": "-45deg",
                          },
                        ],
                      },
                      undefined,
                      Object {},
                    ]
                  }
                />
              </View>
              <View
                accessible={true}
                isTVSelectable={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
              >
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "transparent",
                        "borderColor": "#D0D4DB",
                        "borderRightWidth": 1.5,
                        "borderTopWidth": 1.5,
                        "height": 15,
                        "width": 15,
                      },
                      undefined,
                      Object {
                        "marginLeft": 22,
                        "transform": Array [
                          Object {
                            "translateY": -5,
                          },
                          Object {
                            "rotate": "135deg",
                          },
                        ],
                      },
                      undefined,
                      Object {},
                    ]
                  }
                />
              </View>
            </View>
            <View
              accessible={true}
              hitSlop={
                Object {
                  "bottom": 4,
                  "left": 4,
                  "right": 4,
                  "top": 4,
                }
              }
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              testID="done_button"
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#007AFE",
                      "fontSize": 15,
                      "fontWeight": "bold",
                      "paddingRight": 2,
                      "paddingTop": 1,
                    },
                    undefined,
                  ]
                }
              >
                Done
              </Text>
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#D0D4DB",
                  "justifyContent": "center",
                },
                Object {
                  "height": 215,
                },
                undefined,
              ]
            }
          >
            <View>
              <RCTPicker
                items={
                  Array [
                    Object {
                      "label": "Select...",
                      "textColor": 4286808963,
                      "value": null,
                    },
                    Object {
                      "label": "Football",
                      "textColor": undefined,
                      "value": "football",
                    },
                    Object {
                      "label": "Baseball",
                      "textColor": undefined,
                      "value": "baseball",
                    },
                    Object {
                      "label": "Hockey",
                      "textColor": undefined,
                      "value": "hockey",
                    },
                  ]
                }
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                selectedIndex={0}
                style={
                  Array [
                    Object {
                      "height": 216,
                    },
                    undefined,
                  ]
                }
                testID="ios_picker"
              />
            </View>
          </View>
        </Modal>
      </View>
    </View>
  </View>
</RCTSafeAreaView>
`;
