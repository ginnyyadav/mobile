// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots SignUpScreens Create Account Personal 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
      "paddingTop": 0,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "flex": 1,
          "height": 1334,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "flex-end",
            "margin": 16,
          }
        }
      >
        <View>
          <Text
            style={
              Object {
                "color": "#4f6a92",
                "fontSize": 20,
                "fontWeight": "bold",
                "lineHeight": 32,
                "marginBottom": 14,
                "marginTop": 17,
                "textAlign": "center",
              }
            }
          >
            See all your diabetes data in one place.
          </Text>
        </View>
        <TextInput
          onChangeText={[Function]}
          placeholder="Full Name"
          placeholderTextColor="#838383"
          style={
            Object {
              "borderColor": "#ededed",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "#6582ff",
              "fontSize": 16,
              "height": 58,
              "marginVertical": 5,
              "paddingLeft": 14,
            }
          }
        />
        <TextInput
          onChangeText={[Function]}
          placeholder="Email"
          placeholderTextColor="#838383"
          style={
            Object {
              "borderColor": "#ededed",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "#6582ff",
              "fontSize": 16,
              "height": 58,
              "marginVertical": 5,
              "paddingLeft": 14,
            }
          }
        />
        <TextInput
          onChangeText={[Function]}
          placeholder="Password"
          placeholderTextColor="#838383"
          secureTextEntry={true}
          style={
            Object {
              "borderColor": "#ededed",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "#6582ff",
              "fontSize": 16,
              "height": 58,
              "marginVertical": 5,
              "paddingLeft": 14,
            }
          }
        />
        <TextInput
          onChangeText={[Function]}
          placeholder="Confirm Password"
          placeholderTextColor="#838383"
          secureTextEntry={true}
          style={
            Object {
              "borderColor": "#ededed",
              "borderRadius": 4,
              "borderWidth": 1,
              "color": "#6582ff",
              "fontSize": 16,
              "height": 58,
              "marginVertical": 5,
              "paddingLeft": 14,
            }
          }
        />
        <View
          style={
            Object {
              "flex": 1,
              "justifyContent": "flex-end",
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "stretch",
                "backgroundColor": "#627cff",
                "borderBottomWidth": null,
                "borderColor": "#627cff",
                "borderLeftWidth": null,
                "borderRadius": 5,
                "borderRightWidth": null,
                "borderTopWidth": null,
                "borderWidth": undefined,
                "elevation": 2,
                "flexDirection": "row",
                "height": 45,
                "justifyContent": "center",
                "marginTop": 10,
                "opacity": 1,
                "paddingBottom": 6,
                "paddingTop": 6,
                "shadowColor": undefined,
                "shadowOffset": undefined,
                "shadowOpacity": undefined,
                "shadowRadius": undefined,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": "transparent",
                  "color": "#fff",
                  "fontFamily": "System",
                  "fontSize": 16.5,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                }
              }
              uppercase={false}
            >
              Continue
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</RCTSafeAreaView>
`;

exports[`Storyshots SignUpScreens Sign Up 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
      "paddingTop": 0,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "flex": 1,
          "height": 1334,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "margin": 16,
          }
        }
      >
        <View>
          <Text
            style={
              Object {
                "color": "#4f6a92",
                "fontSize": 20,
                "fontWeight": "bold",
                "lineHeight": 32,
                "marginBottom": 14,
                "marginTop": 17,
                "textAlign": "center",
              }
            }
          >
            What kind of account do you need?
          </Text>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#f9f9f9",
                  "borderColor": "#ededed",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "elevation": 4,
                  "height": 144,
                  "marginVertical": 8,
                  "overflow": "hidden",
                },
                Object {
                  "backgroundColor": "#DCE0F9",
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              disabled={false}
              style={
                Array [
                  Array [
                    undefined,
                    null,
                  ],
                  Object {
                    "color": "#4f6a92",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "lineHeight": 28,
                    "marginLeft": 16,
                    "marginTop": 8,
                  },
                ]
              }
            >
              Personal Account
            </Text>
            <Text
              style={
                Object {
                  "color": "#7e98c3",
                  "fontSize": 12,
                  "fontWeight": "500",
                  "lineHeight": 20,
                  "marginHorizontal": 16,
                  "marginVertical": 8,
                }
              }
            >
              You want to manage your diabetes data. You are caring for or supporting someone with diabetes.
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "#f9f9f9",
                  "borderColor": "#ededed",
                  "borderRadius": 4,
                  "borderWidth": 1,
                  "elevation": 4,
                  "height": 144,
                  "marginVertical": 8,
                  "overflow": "hidden",
                },
                Object {
                  "backgroundColor": "#DCE0F9",
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              disabled={false}
              style={
                Array [
                  Array [
                    undefined,
                    null,
                  ],
                  Object {
                    "color": "#4f6a92",
                    "fontSize": 16,
                    "fontWeight": "500",
                    "lineHeight": 28,
                    "marginLeft": 16,
                    "marginTop": 8,
                  },
                ]
              }
            >
              Clinic Account
            </Text>
            <Text
              style={
                Object {
                  "color": "#7e98c3",
                  "fontSize": 12,
                  "fontWeight": "500",
                  "lineHeight": 20,
                  "marginHorizontal": 16,
                  "marginVertical": 8,
                }
              }
            >
              You are a doctor, a clinic or other healthcare provider that wants to use Tidepool to help people in your care.
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</RCTSafeAreaView>
`;

exports[`Storyshots SignUpScreens Terms of Use 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "flex": 1,
      "paddingTop": 0,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": "#ffffff",
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "flex": 1,
          "height": 1334,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
            "margin": 16,
          }
        }
      >
        <View>
          <View>
            <Text
              style={
                Object {
                  "color": "#4f6a92",
                  "fontSize": 20,
                  "fontWeight": "bold",
                  "lineHeight": 32,
                  "marginBottom": 14,
                  "marginTop": 17,
                  "textAlign": "center",
                }
              }
            >
              Some serious questions for you.
            </Text>
          </View>
          <View>
            <Text
              style={
                Object {
                  "color": "#7e98c3",
                  "fontSize": 16,
                  "marginBottom": 2,
                  "marginTop": 15,
                }
              }
            >
              Select your age.
            </Text>
            <View
              style={
                Array [
                  Object {
                    "alignSelf": "stretch",
                  },
                  undefined,
                ]
              }
            >
              <View
                accessible={true}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                pointerEvents="box-only"
                testID="ios_touchable_wrapper"
              >
                <TextInput
                  editable={false}
                  style={
                    Array [
                      Object {
                        "borderColor": "#ededed",
                        "borderRadius": 4,
                        "borderWidth": 1,
                        "color": "#838383",
                        "fontSize": 18,
                        "height": 58,
                        "paddingLeft": 16,
                        "paddingRight": 30,
                      },
                      Object {
                        "color": "#838383",
                        "paddingLeft": 18,
                      },
                    ]
                  }
                  value="Select..."
                />
                <View
                  style={
                    Array [
                      Object {
                        "position": "absolute",
                        "right": 0,
                      },
                      Object {
                        "paddingRight": 15,
                        "paddingTop": 20,
                      },
                    ]
                  }
                  testID="icon_container"
                >
                  <Text />
                </View>
              </View>
              <Modal
                hardwareAccelerated={false}
                onDismiss={[Function]}
                onOrientationChange={[Function]}
                supportedOrientations={
                  Array [
                    "portrait",
                    "landscape",
                  ]
                }
                testID="ios_modal"
                transparent={true}
                visible={false}
              >
                <View
                  accessible={true}
                  isTVSelectable={true}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "flex": 1,
                      "opacity": 1,
                    }
                  }
                  testID="ios_modal_top"
                />
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "backgroundColor": "#EFF1F2",
                        "borderTopColor": "#919498",
                        "borderTopWidth": 0.5,
                        "flexDirection": "row",
                        "height": 44,
                        "justifyContent": "space-between",
                        "paddingHorizontal": 10,
                        "zIndex": 2,
                      },
                      undefined,
                    ]
                  }
                  testID="input_accessory_view"
                >
                  <View
                    style={
                      Array [
                        Object {
                          "flexDirection": "row",
                        },
                        undefined,
                      ]
                    }
                  >
                    <View
                      accessible={true}
                      isTVSelectable={true}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderColor": "#D0D4DB",
                              "borderRightWidth": 1.5,
                              "borderTopWidth": 1.5,
                              "height": 15,
                              "width": 15,
                            },
                            undefined,
                            Object {
                              "marginLeft": 11,
                              "transform": Array [
                                Object {
                                  "translateY": 4,
                                },
                                Object {
                                  "rotate": "-45deg",
                                },
                              ],
                            },
                            undefined,
                            Object {},
                          ]
                        }
                      />
                    </View>
                    <View
                      accessible={true}
                      isTVSelectable={true}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {
                              "backgroundColor": "transparent",
                              "borderColor": "#D0D4DB",
                              "borderRightWidth": 1.5,
                              "borderTopWidth": 1.5,
                              "height": 15,
                              "width": 15,
                            },
                            undefined,
                            Object {
                              "marginLeft": 22,
                              "transform": Array [
                                Object {
                                  "translateY": -5,
                                },
                                Object {
                                  "rotate": "135deg",
                                },
                              ],
                            },
                            undefined,
                            Object {},
                          ]
                        }
                      />
                    </View>
                  </View>
                  <View
                    accessible={true}
                    hitSlop={
                      Object {
                        "bottom": 4,
                        "left": 4,
                        "right": 4,
                        "top": 4,
                      }
                    }
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    testID="done_button"
                  >
                    <Text
                      style={
                        Array [
                          Object {
                            "color": "#007AFE",
                            "fontSize": 15,
                            "fontWeight": "bold",
                            "paddingRight": 2,
                            "paddingTop": 1,
                          },
                          undefined,
                        ]
                      }
                    >
                      Done
                    </Text>
                  </View>
                </View>
                <View
                  style={
                    Array [
                      Object {
                        "backgroundColor": "#D0D4DB",
                        "justifyContent": "center",
                      },
                      Object {
                        "height": 215,
                      },
                      undefined,
                    ]
                  }
                >
                  <View>
                    <RCTPicker
                      items={
                        Array [
                          Object {
                            "label": "Select...",
                            "textColor": 4286808963,
                            "value": null,
                          },
                          Object {
                            "label": "Football",
                            "textColor": undefined,
                            "value": "football",
                          },
                          Object {
                            "label": "Baseball",
                            "textColor": undefined,
                            "value": "baseball",
                          },
                          Object {
                            "label": "Hockey",
                            "textColor": undefined,
                            "value": "hockey",
                          },
                        ]
                      }
                      onChange={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      selectedIndex={0}
                      style={
                        Array [
                          Object {
                            "height": 216,
                          },
                          undefined,
                        ]
                      }
                      testID="ios_picker"
                    />
                  </View>
                </View>
              </Modal>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "paddingTop": 30,
            }
          }
        >
          <View
            style={
              Object {
                "display": "flex",
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                }
              }
            >
              <RCTSwitch
                accessibilityRole="button"
                onChange={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                onTintColor="#627cff"
                style={
                  Object {
                    "height": 31,
                    "width": 51,
                  }
                }
                value={false}
              />
              <Text
                style={
                  Object {
                    "color": "#4f6a92",
                    "fontSize": 16,
                    "marginLeft": 10,
                    "width": 280,
                  }
                }
              >
                I am 18 or older and accept the terms of the Tidepool App Terms of Use and Privacy Policy
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
              "justifyContent": "flex-end",
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "alignSelf": "stretch",
                "backgroundColor": "#627cff",
                "borderBottomWidth": null,
                "borderColor": "#627cff",
                "borderLeftWidth": null,
                "borderRadius": 5,
                "borderRightWidth": null,
                "borderTopWidth": null,
                "borderWidth": undefined,
                "elevation": 2,
                "flexDirection": "row",
                "height": 45,
                "justifyContent": "center",
                "opacity": 1,
                "paddingBottom": 6,
                "paddingTop": 6,
                "shadowColor": undefined,
                "shadowOffset": undefined,
                "shadowOpacity": undefined,
                "shadowRadius": undefined,
              }
            }
          >
            <Text
              style={
                Object {
                  "backgroundColor": "transparent",
                  "color": "#fff",
                  "fontFamily": "System",
                  "fontSize": 16.5,
                  "marginLeft": 0,
                  "marginRight": 0,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                }
              }
              uppercase={false}
            >
              Continue
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</RCTSafeAreaView>
`;
